<html lang="en">
<head>
<style>
body {
	margin: 0;
	padding: 0;
}
#controls {
	margin: 0;
	padding: 7px 5px;
	background: #EEEEEE;
	border-bottom: 1px solid #DDDDDD;
	font: 0.8em sans-serif;
}
#controls label {
	display: inline-block;
}
#controls label, #controls select, #controls button {
	margin: 3px 5px;
}
#output {
	font: 1em monospace;
	line-height: 1.4;
	margin: 20px;
}
#output .head {
	font-weight: bolder;
}
.right {
	float: right;
}
</style>
<script src="src/Raffle.js"></script>
<script src="src/nsi.js"></script>
<script>

function money(v) {
	return '\u00A3' + v.toFixed(2);
}

function apr(monthly, capital) {
	return (Math.pow(1 + monthly / capital, 12) - 1) * 100;
}

window.addEventListener('load', () => {
	const controlsForm = document.getElementById('controls');
	const raffleSelect = document.getElementById('raffle');
	const loadNSI = document.getElementById('load_nsi');
	const ticketsField = document.getElementById('tickets');
	const calculate = document.getElementById('calculate');
	const output = document.getElementById('output');

	const raffles = [];

	function add_message(m, cls = '') {
		const t = document.createTextNode(m);
		const d = document.createElement('div');
		d.appendChild(t);
		d.setAttribute('class', cls);
		output.appendChild(d);
		return d;
	}

	function add_raffle(name, seed) {
		const index = raffles.length;
		raffles.push({
			name,
			raffle: Raffle.from(seed, {pCutoff: 1e-10}),
		});
		const opt = document.createElement('option');
		const txt = document.createTextNode(name);
		opt.appendChild(txt);
		opt.setAttribute('value', index);
		raffleSelect.appendChild(opt);
		return index;
	}

	function run(raffle, tickets) {
		const games = [];
		if(!tickets) {
			for(let i = 1000; i <= 50000; i += 1000) {
				games.push(raffle.enter(i)
				.then((result1) => result1.pow(12, {pCutoff: 1e-10})
				.then((result12) => ({result1, result12})))
			);
			}
		} else {
			games.push(raffle.enter(tickets)
				.then((result1) => result1.pow(12, {pCutoff: 1e-10})
				.then((result12) => ({result1, result12})))
			);
		}

		add_message('Calculating for audience of ' + raffle.audience() + '\u2026');

		return Promise.all(games).then((allResults) => {
			for(const {result1, result12} of allResults) {
				const tickets = result1.tickets();
				add_message('Tickets: ' + tickets, 'head');

				const mean1 = result1.mean();
				const mean12 = result12.mean();
				const median1 = result1.median();
				const median12 = result12.median();
				const mode1 = result1.mode();
				const mode12 = result12.mode();

				add_message(
					'Mean: 1 month: ' + money(mean1)
					+ ' (' + apr(mean1, tickets).toFixed(3) + '% APR)'
					+ ', 12 months: ' + money(mean12)
					+ ' (' + (mean12 * 100 / tickets).toFixed(3) + '% APR)'
				);
				add_message(
					'Median: 1 month: ' + money(median1)
					+ ', 12 months: ' + money(median12)
					+ ' (' + (median12 * 100 / tickets).toFixed(3) + '% APR)'
				);
				add_message(
					'Mode: 1 month: ' + money(mode1)
					+ ', 12 months: ' + money(mode12)
					+ ' (' + (mode12 * 100 / tickets).toFixed(3) + '% APR)'
				);
				add_message(
					'1 Month Percentiles: '
					+ '0th = ' + money(result1.percentile(0)) + ', '
					+ '25th = ' + money(result1.percentile(25)) + ', '
					+ '50th = ' + money(result1.percentile(50)) + ', '
					+ '75th = ' + money(result1.percentile(75)) + ', '
					+ '100th = ' + money(result1.percentile(100))
				);
				add_message(
					'12 Month Percentiles: '
					+ '0th = ' + money(result12.percentile(0)) + ', '
					+ '25th = ' + money(result12.percentile(25)) + ', '
					+ '50th = ' + money(result12.percentile(50)) + ', '
					+ '75th = ' + money(result12.percentile(75)) + ', '
					+ '100th = ' + money(result12.percentile(100))
				);
			}

			const result1 = allResults[allResults.length - 1].result1;
			add_message('Breakdown for tickets: ' + result1.tickets(), 'head');
			for(let i = result1.min(); i <= result1.max(); ++ i) {
				const pE = result1.exact_probability(i);
				if(pE < 0.00000001) {
					continue;
				}
				const pR = result1.range_probability(i, Number.POSITIVE_INFINITY);
				add_message(
					'= ' + money(i) + ': ' +
					(pE * 100).toFixed(4) + '%' +
					' >= ' + money(i) + ': ' +
					(pR * 100).toFixed(4) + '%'
				);
			}
		});
	}

	const basicRaffle = add_raffle('NS&I Premium Bonds Sample Data', new NSI([
		{value: 1000000, count:       2},
		{value:  100000, count:       5},
		{value:   50000, count:       8},
		{value:   25000, count:      19},
		{value:   10000, count:      46},
		{value:    5000, count:      92},
		{value:    1000, count:    1717},
		{value:     500, count:    5151},
		{value:     100, count:   23554},
		{value:      50, count:   23554},
		{value:      25, count: 2950583},
	], 24500));

	raffleSelect.value = basicRaffle;

	let loadedNSI = false;
	loadNSI.addEventListener('click', () => {
		if(loadedNSI) {
			return;
		}
		loadedNSI = true;
		loadNSI.setAttribute('disabled', 'disabled');
		loadNSI.textContent = 'Loading\u2026';

		NSI.load().then(({last, next}) => {
			loadNSI.textContent = 'Loaded';
			add_raffle('Previous NS&I Raffle', last);
			const nextRaffle = add_raffle('Predicted Next NS&I Raffle', next);
			raffleSelect.value = nextRaffle;
		});
	});

	controlsForm.addEventListener('submit', (e) => {
		e.preventDefault();
		raffleSelect.setAttribute('disabled', 'disabled');
		calculate.setAttribute('disabled', 'disabled');

		while(output.childElementCount > 0) {
			output.removeChild(output.lastChild);
		}

		run(raffles[raffleSelect.value].raffle, ticketsField.value)
			.then(() => {
				raffleSelect.removeAttribute('disabled');
				calculate.removeAttribute('disabled');
			});
	});

	add_message('Ready. Select options above and press Calculate to begin');
});
</script>
</head>
<body>
<form id="controls" action="#">
<button id="load_nsi" type="button" class="right" tabindex="2">Load latest prizes from NS&amp;I</button>
<select id="raffle" tabindex="1"></select>
<label>Tickets: <input id="tickets" type="number" min="0" max="50000" step="1" value="10000" placeholder="multi" tabindex="1" /></label>
<button id="calculate" type="submit" tabindex="1">Calculate</button>
</form>
<div id="output"></div>
</body>
</html>
