<html lang="en">
<head>
<meta charset="utf-8">
<link rel="stylesheet" href="style.css" />
<link rel="icon" href="favicon.png" />
<script src="src/SharedPromise.js"></script>
<script src="src/WebWorkerEngine.js"></script>
<script src="src/Raffle.js"></script>
<script src="src/NSI.js"></script>

<script src="src/UIUtils.js"></script>
<script src="src/Graph.js"></script>
<script src="src/RaffleSelectUI.js"></script>
<script src="src/ProbabilityUI.js"></script>
<script src="src/InvestmentUI.js"></script>
<title>Raffle Predictor</title>
<script>

window.addEventListener('load', () => {
	Raffle.set_engine(new SharedWebWorkerEngine({
		workers: (navigator.hardwareConcurrency - 1) || 1,
	}));

	const markers = [
		{name: 'Averages'},
		{col: '#0033CC', name: 'Mean', value: (r) => r.mean()},
		{col: '#0077AA', name: 'Median', value: (r) => r.median()},
		{col: '#009900', name: 'Mode', value: (r) => r.mode()},

		{name: 'Percentiles'},
		{
			col: '#CCAA66',
			fullName: '25th Percentile',
			name: '25th',
			value: (r) => r.percentile(25),
		},
		{
			col: '#AA66FF',
			fullName: '75th Percentile',
			name: '75th',
			value: (r) => r.percentile(75),
		},
		{
			col: '#CC6666',
			fullName: '95th Percentile',
			name: '95th',
			value: (r) => r.percentile(95),
		},
	];

	const currencyCode = 'GBP';
	const maxMonths = 12 * 20;
	const maxTickets = 50000;
	const ticketCost = 1;

	const raffleSelectUI = new RaffleSelectUI({currencyCode});
	const probabilityUI = new ProbabilityUI({
		GraphClass: Graph,
		currencyCode,
		defaultTickets: 10000,
		graphLimit: 10000,
		markers,
		maxMonths: 12 * 30,
		maxTickets,
		ticketCost,
	});
	const investmentUI = new InvestmentUI({
		GraphClass: Graph,
		currencyCode,
		markers,
		maxMonths: 12 * 10,
		maxTickets,
		minTickets: 0,
		stepTickets: 100,
		ticketCost,
	});

	raffleSelectUI.set_callback((raffle) => {
		probabilityUI.set_raffle(raffle);
		investmentUI.set_raffle(raffle);
	});

	raffleSelectUI.add_loader('Load latest prizes from NS&I', () =>
		NSI.load().then(({last, next}) => {
			if(last) {
				raffleSelectUI.add(
					'Previous NS&I Raffle',
					Raffle.from(last, {pCutoff: 1e-10})
				);
			}
			if(next) {
				raffleSelectUI.select(raffleSelectUI.add(
					'Predicted Next NS&I Raffle',
					Raffle.from(next, {pCutoff: 1e-10})
				));
			}
		})
	);

	raffleSelectUI.add(
		'NS&I Premium Bonds Snapshot used by MSE',
		Raffle.from(new NSI([
			{value: 1000000, count:       2},
			{value:  100000, count:       4},
			{value:   50000, count:      10},
			{value:   25000, count:      17},
			{value:   10000, count:      43},
			{value:    5000, count:      87},
			{value:    1000, count:    1677},
			{value:     500, count:    5031},
			{value:     100, count:   22984},
			{value:      50, count:   22984},
			{value:      25, count: 2879959},
			{value:       0, count: 71850560383},
		]), {pCutoff: 1e-10})
	);

	raffleSelectUI.add(
		'NS&I Premium Bonds Snapshot (March 2018)',
		Raffle.from(new NSI([
			{value: 1000000, count:       2},
			{value:  100000, count:       5},
			{value:   50000, count:       8},
			{value:   25000, count:      19},
			{value:   10000, count:      46},
			{value:    5000, count:      92},
			{value:    1000, count:    1717},
			{value:     500, count:    5151},
			{value:     100, count:   23554},
			{value:      50, count:   23554},
			{value:      25, count: 2950583},
		], {audienceMultiplier: 24500}), {pCutoff: 1e-10})
	);

	raffleSelectUI.add(
		'NS&I Premium Bonds Snapshot (September 2020)',
		Raffle.from(new NSI([
			{value: 1000000, count:       2},
			{value:  100000, count:       7},
			{value:   50000, count:      14},
			{value:   25000, count:      28},
			{value:   10000, count:      71},
			{value:    5000, count:     140},
			{value:    1000, count:    2204},
			{value:     500, count:    6612},
			{value:     100, count:   30244},
			{value:      50, count:   30244},
			{value:      25, count: 3786474},
		], {audienceMultiplier: 24500}), {pCutoff: 1e-10})
	);

	raffleSelectUI.add(
		'NS&I Premium Bonds Snapshot (November 2020)',
		Raffle.from(new NSI([
			{value: 1000000, count:       2},
			{value:  100000, count:       7},
			{value:   50000, count:      15},
			{value:   25000, count:      30},
			{value:   10000, count:      75},
			{value:    5000, count:     147},
			{value:    1000, count:    2274},
			{value:     500, count:    6822},
			{value:     100, count:   31198},
			{value:      50, count:   31198},
			{value:      25, count: 3906518},
		], {audienceMultiplier: 24500}), {pCutoff: 1e-10})
	);

	raffleSelectUI.select(raffleSelectUI.add(
		'NS&I Premium Bonds Snapshot (December 2020)',
		Raffle.from(new NSI([
			{value: 1000000, count:       2},
			{value:  100000, count:       4},
			{value:   50000, count:       9},
			{value:   25000, count:      16},
			{value:   10000, count:      43},
			{value:    5000, count:      83},
			{value:    1000, count:    1639},
			{value:     500, count:    4917},
			{value:     100, count:   26637},
			{value:      50, count:   26637},
			{value:      25, count: 2790269},
		], {audienceMultiplier: 34500}), {pCutoff: 1e-10})
	));

	document.body.appendChild(raffleSelectUI.dom());
	document.body.appendChild(investmentUI.dom());
	document.body.appendChild(probabilityUI.dom());
});
</script>
</head>
<body>
<section class="info">
<h1>Raffle Predictor</h1>
<p>
This tool calculates odds of winning various prizes in a monetary raffle.
It is designed specifically to calculate
<a href="https://www.nsandi.com/premium-bonds" target="_blank">NS&amp;I Premium
Bonds</a>, but will work with any similar scheme.
</p>
<p>
For full details,
<a href="https://github.com/davidje13/Raffle" target="_blank">see the project
on GitHub</a>.
</p>
</section>
</body>
</html>
